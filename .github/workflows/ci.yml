---
name: ci

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  release:
    types: [created]

jobs:
  builds-and-test:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        python-version: ["2.7", "3.6", "3.7", "3.8"]
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v1"
        with:
            python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install pytest
          python -m pip install -r requirements-test.txt
        shell: bash
      - name: "Build"
        run: |
          if [[ `uname` == "Darwin" ]]
          then
            echo "build --macos_minimum_os=10.9" >> ${HOME}/.bazelrc
          fi
          set -xe
          python -VV
          bazel --version
          python setup.py sdist
          pip wheel --verbose --no-deps --no-clean dist/dm-tree*.tar.gz
          pip install dm_tree*.whl
        shell: bash
      - name: "Run tests"
        run: |
          set -xe
          # Change directory to avoid importing tree from repo root.
          mkdir tests && pushd tests
          python -m pytest -vv --pyargs tree
          popd
        shell: bash
      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        with:
          path: dm_tree*.whl
      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        with:
          path: dist/dm-tree*.tar.gz
          
  AArch64_Manylinux2014Build:
    name: Linux aarch64
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
        arch: [aarch64]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install tools
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} ${{ env.py }} -m pip install -U setuptools wheel
    - name: Make wheel
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            python -m pip install --upgrade pip && \
            python -m pip install --upgrade pip setuptools wheel bazel && \
            python -m pip install -r requirements-test.txt && \
            python setup.py sdist && \
            python -m pip wheel --verbose --no-deps --no-clean dist/dm-tree*.tar.gz && \
            python -m pip install dm_tree*.whl && \
            python -m pip pip install pytest && \
            python -m pytest  && \
            deactivate'
    - name: Test
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '\
            source .env/bin/activate && \
            pip install pytest && \
            mkdir tests && pushd tests && \
            python -m pytest -vv --pyargs tree && \
            popd
            deactivate'
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: wheelhouse/*
